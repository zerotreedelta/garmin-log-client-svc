Resources:
  IdentityPoolId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: /${self:service}/IdentityPoolId/${self:provider.stage}
      Type: String
      Value: ${cf:garmin-log-client-svc-${self:provider.stage}.IdentityPoolId}

  FileUploadBucketName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: /${self:service}/FileUploadBucketName/${self:provider.stage}
      Type: String
      Value: ${cf:garmin-log-client-svc-${self:provider.stage}.FileUploadBucketName}

  UserPoolId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: /${self:service}/${self:service}/UserPoolId/${self:provider.stage}
      Type: String
      Value: ${cf:garmin-log-client-svc-${self:provider.stage}.UserPoolId}

  UserPoolClientId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: /${self:service}/UserPoolClientId/${self:provider.stage}
      Type: String
      Value: ${cf:garmin-log-client-svc-${self:provider.stage}.UserPoolClientId}

  ServiceEndpoint:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: /${self:service}/ServiceEndpoint/${self:provider.stage}
      Type: String
      Value: ${cf:garmin-log-client-svc-${self:provider.stage}.ServiceEndpoint}

  AWSServiceRegion:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: /${self:service}/AWSServiceRegion/${self:provider.stage}
      Type: String
      Value: ${self:provider.region}

  # maybe can store as just a simple json payload... to explore later
  # ClientEnvVars:
  #   Type: "AWS::SSM:Document"
  #   Properties:
  #     Content:


